/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package users;

import java.awt.HeadlessException;
import java.sql.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import privilege.*;

/**
 *
 * @author Administrator
 */
public class ViewUsers extends javax.swing.JFrame {
    
    int nCount=0, pCount=0;
    boolean flag = false ;
    /**
     * Creates new form ViewUsers
     */
    public ViewUsers() throws SQLException {
        initComponents();
        
        // view users //
        getUsers();
        
        // Add Form //
        addPanel.setVisible(false);
        
    }
    private void getUsers() throws SQLException
    {
        UserHandler uh = new UserHandler();
        Vector usrList = uh.getAllUsers();
        uh.closeConnection();
        
        DefaultTableModel dtm =(DefaultTableModel) usersTable.getModel();
        dtm.setRowCount(0);
        for(int v=0; v< usrList.size() ; v++)
        {
          UserBean ub = (UserBean)usrList.elementAt(v);
          
          Vector newRow = new Vector();
          newRow.addElement(ub.getId());
          newRow.addElement(ub.getName());
          newRow.addElement(ub.getPassword());
          dtm.addRow(newRow);
        }
        usersTable.setModel(dtm);
        usersTable.updateUI();
        jScrollPane1.setViewportView(usersTable);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        addUser_ = new javax.swing.JButton();
        updateUser_ = new javax.swing.JButton();
        addPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        password = new javax.swing.JTextField();
        prvList = new javax.swing.JComboBox();
        save_ = new javax.swing.JButton();
        cancel_ = new javax.swing.JButton();
        reset_ = new javax.swing.JButton();
        deletUser = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Users");

        jTabbedPane1.setToolTipText("");

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        usersTable.setAutoCreateRowSorter(true);
        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "User", "Password"
            }
        ));
        jScrollPane1.setViewportView(usersTable);

        addUser_.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addUser_.setText("Add New User");
        addUser_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUser_ActionPerformed(evt);
            }
        });

        updateUser_.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateUser_.setText("Update User");
        updateUser_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateUser_ActionPerformed(evt);
            }
        });

        addPanel.setBackground(new java.awt.Color(255, 204, 102));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("User Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Password");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Privilege");

        name.setToolTipText("");
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameKeyPressed(evt);
            }
        });

        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordKeyPressed(evt);
            }
        });

        prvList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select Privilege--" }));
        prvList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prvListActionPerformed(evt);
            }
        });

        save_.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        save_.setText("Save");
        save_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_ActionPerformed(evt);
            }
        });

        cancel_.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cancel_.setText("Cancel");
        cancel_.setToolTipText("");
        cancel_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_ActionPerformed(evt);
            }
        });

        reset_.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reset_.setText("Reset");
        reset_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_ActionPerformed(evt);
            }
        });

        deletUser.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deletUser.setForeground(new java.awt.Color(153, 0, 0));
        deletUser.setText("Delete User ?");
        deletUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(save_, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(reset_, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(cancel_, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPanelLayout.createSequentialGroup()
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                                    .addComponent(name)))
                            .addGroup(addPanelLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(prvList, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deletUser, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prvList, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deletUser))
                .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(reset_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(save_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(cancel_, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addUser_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateUser_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addUser_, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(updateUser_, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Users", jPanel1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 645, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 546, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Categories", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 645, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 546, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Bills", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Users");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void save_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_ActionPerformed
        // TODO add your handling code here:
        String uName = name.getText().trim();
        String upass = password.getText().trim();
        if(uName.length()>0 && upass.length()>0)
        {
            if(flag) // true: update
            {
                try 
                {
                    updateUser(uName, upass);
                } 
                catch (HeadlessException ex) {
                    Logger.getLogger(ViewUsers.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(ViewUsers.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else // false: add new
            {
                addNewUser(uName, upass);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Enter user and password");
        }
    }//GEN-LAST:event_save_ActionPerformed
    private void updateUser(String uName, String upass) throws HeadlessException, SQLException 
    {
        int userId = -1;
        // get selected userBean //
        UserBean selectedUB =  getSelectedUser();
        
        if(selectedUB != null)
        {
            // 1- delete user //
            userId = selectedUB.getId();
            deleteSelectedUser(userId);
            
            // 2- update //
            int prvId = -1;
            if( prvList.getSelectedIndex() > 0)
            {
                PrivilegeBean selPrv = (PrivilegeBean) prvList.getSelectedItem();
                prvId = selPrv.getId();
            }
             
            selectedUB.setName(uName);
            selectedUB.setPassword(upass);
            selectedUB.setPrvId(prvId);
            
            saveUpdatedValues(selectedUB);
        }
    }
    private void saveUpdatedValues(UserBean selectedUB) throws SQLException
    {
        // update user //
        UserHandler uh = new UserHandler();
        int total = uh.updateUser(selectedUB);
        uh.closeConnection();
        
        // update user privilege //
        PrivilegeHandler ph = new PrivilegeHandler();
        if(selectedUB.getPrvId() == -1) // delete 
            ph.deleteUserPrivilegeByUserId(selectedUB.getId());
        else  // update
        {
            int d = ph.updateUserPrivilege(selectedUB);
            
            if(d <=0)
                ph.addUserPrivilege(selectedUB.getId(), selectedUB.getPrvId());
        }
        ph.closeConnection();
        
         // view users //
         getUsers();
    }
    /**
     * 
     * @return 
     */
    private UserBean getSelectedUser()
    {
        UserBean ub = new UserBean();
        int selectedUser = usersTable.getSelectedRow();
        if(selectedUser >= 0)
        {
            ub.setId( (int)usersTable.getValueAt(selectedUser, 0) );
            ub.setName( usersTable.getValueAt(selectedUser, 1).toString() );
            ub.setPassword( usersTable.getValueAt(selectedUser, 2).toString());
        }
        else
        {
           JOptionPane.showMessageDialog(rootPane, "Select a user"); 
        }
        return ub;
    }
    /**
     * 
     * @param userId
     * @throws SQLException
     * @throws HeadlessException 
     */
    private void deleteSelectedUser(int userId) throws SQLException, HeadlessException 
    {
       
        if(deletUser.isSelected())
        {
            int x = JOptionPane.showConfirmDialog(rootPane, "Are You sure delete record ??");
            // x= {0:yes ; 1:No ; 2:cancel } //
            if(x==0)
            {
                UserHandler uh = new UserHandler();
                int z = uh.deleteUserById(userId);
                uh.closeConnection();
                
                // view users //
                getUsers();
            }
            else
            {
                deletUser.setSelected(false);
            }
        }
    }
    /**
     * 
     * @param uName
     * @param upass
     * @throws HeadlessException 
     */
    private void addNewUser(String uName, String upass) throws HeadlessException 
    {
        int userId= -1;
        // add user only //
        UserHandler uh = new UserHandler();
        try
        {
            userId = uh.checkUser(uName, upass);
            if(userId == -1)
            {
                JOptionPane.showMessageDialog(rootPane, "user and password already exist , Try again!!!");
            }
            else
            {
                int x = uh.addUser(uName, upass);
                if(x > 0)
                {
                    // get new user id //
                    userId = uh.checkUser(uName, upass);
                    // view users //
                    getUsers();
                }
                uh.closeConnection();
                
                int selIndx = prvList.getSelectedIndex();
                // add user privilege //
                if(selIndx > 0)
                {
                    PrivilegeHandler ph = new PrivilegeHandler();
                    PrivilegeBean pb = (PrivilegeBean)prvList.getSelectedItem();
                    int prvId = pb.getId();
                    int e = ph.addUserPrivilege(userId, prvId);
                    if(e > 0)
                        JOptionPane.showMessageDialog(rootPane, "user privilege added successfully");
                    
                    ph.closeConnection();
                }
            }
        }
        catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(rootPane, "user and password already exist");
        }
    }

    private void addUser_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUser_ActionPerformed
       
        save_.setText("Save");
        deletUser.setVisible(false);
        deletUser.setSelected(false);
        addPanel.setVisible(true);
        flag = false ; // add new //
        
        try 
        {
            getPrivileges();
        } 
        catch (SQLException ex) {
            Logger.getLogger(ViewUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addUser_ActionPerformed
    private void getPrivileges() throws SQLException
    {
        prvList.removeAllItems();
        prvList.addItem("-Select Privilege-");
        
        PrivilegeHandler ph = new PrivilegeHandler();
        Vector privilegeList = ph.getAllPrivileges();
        for(int v=0; v < privilegeList.size(); v++)
        {
            PrivilegeBean pb = (PrivilegeBean) privilegeList.elementAt(v);
            prvList.addItem(pb);
        }
        ph.closeConnection();
    }
    private void cancel_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_ActionPerformed
       
        addPanel.setVisible(false);
        reset_ActionPerformed(evt);
    }//GEN-LAST:event_cancel_ActionPerformed

    private void reset_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_ActionPerformed
        name.setText("");
        password.setText("");
        prvList.setSelectedIndex(0);
    }//GEN-LAST:event_reset_ActionPerformed

    private void prvListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prvListActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_prvListActionPerformed

    private void nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyPressed
        // TODO add your handling code here:
        nCount++;
        if(nCount >10)
        {
            JOptionPane.showMessageDialog(rootPane, "Max. character [Name] = 10");
            String tmp = name.getText().substring(0, 10);
            name.setText(tmp);
        }
    }//GEN-LAST:event_nameKeyPressed

    private void passwordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyPressed
        // TODO add your handling code here:
        pCount++;
        if(pCount >10)
        {
            JOptionPane.showMessageDialog(rootPane, "Max. character [Password] = 10");
            String tmp = password.getText().substring(0, 10);
            password.setText(tmp);
        }
    }//GEN-LAST:event_passwordKeyPressed

    private void deletUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deletUserActionPerformed

    private void updateUser_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateUser_ActionPerformed
        // TODO add your handling code here:
        save_.setText("Update");
        deletUser.setVisible(true);
        deletUser.setSelected(false);
        addPanel.setVisible(true);
        flag = true ; // update //
        try 
        {
            // get privilege //
            getPrivileges();
            
            // get selected user //
            UserBean selectedUB =  getSelectedUser();
            if(selectedUB != null)
            {
                name.setText( selectedUB.getName() );
                password.setText(selectedUB.getPassword() );
                int userId = selectedUB.getId();
                PrivilegeHandler ph = new PrivilegeHandler();
                int prvId = ph.getUserPrivilegeId(userId);
                
                if( prvId == -1)
                    prvList.setSelectedItem(0);
                else
                {
                    // i=0 : string / not valid //
                    for(int i=1; i< prvList.getItemCount() ; i++)
                    {
                        PrivilegeBean pb = (PrivilegeBean)prvList.getItemAt(i);
                        if(pb.getId() == prvId)
                        {
                            prvList.setSelectedItem(pb);
                            break;
                        }
                    }
                }    
                
                
            }
            
            
        } 
        catch (SQLException ex) {
            Logger.getLogger(ViewUsers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateUser_ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ViewUsers().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ViewUsers.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addPanel;
    private javax.swing.JButton addUser_;
    private javax.swing.JButton cancel_;
    private javax.swing.JCheckBox deletUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField password;
    private javax.swing.JComboBox prvList;
    private javax.swing.JButton reset_;
    private javax.swing.JButton save_;
    private javax.swing.JButton updateUser_;
    private javax.swing.JTable usersTable;
    // End of variables declaration//GEN-END:variables
}
